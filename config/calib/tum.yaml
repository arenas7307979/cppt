%YAML:1.0
#common parameters
imu_topic: "/imu0"
image_topic: "/cam0/image_raw"
image_r_topic: "/cam1/image_raw"
output_path: "/catkin_ws/src/libcppt/config/log.tum"

model_type: FISHEYE
camera_name: camera
image_width: 512
image_height: 512

#camera calibration
T_BC0: !!opencv-matrix
    rows: 4
    cols: 4
    dt: d
    data: [-0.99952504,  0.00750192, -0.02989013,  0.04557484,
            0.02961534, -0.03439736, -0.99896935, -0.0711618 ,
           -0.00852233, -0.99938008,  0.03415885, -0.04468125,
            0.        ,  0.        ,  0.        ,  1.        ]

intrinsics0: [190.97847715128717, 190.9733070521226, 254.93170605935475, 256.8974428996504] #fu, fv, cu, cv
distortion_coefficients0: [0.0034823894022493434, 0.0007150348452162257, -0.0020532361418706202, 0.00020293673591811182]

T_BC1: !!opencv-matrix
    rows: 4
    cols: 4
    dt: d
    data: [-0.99951105,  0.00810408, -0.03019914, -0.05545634,
            0.03029912,  0.01251164, -0.99946257, -0.06925002,
           -0.00772188, -0.99988889, -0.01275107, -0.04745286,
            0.        ,  0.        ,  0.        ,  1.        ]

intrinsics1: [190.44236969414825, 190.4344384721956, 252.59949716835982, 254.91723064636983] #fu, fv, cu, cv
distortion_coefficients1: [0.0034003170790442797, 0.001766278153469831, -0.00266312569781606, 0.0003299517423931039]

T_BI: !!opencv-matrix
    cols: 4
    rows: 4
    dt: d
    data: [1.0, 0.0, 0.0, 0.0,
           0.0, 1.0, 0.0, 0.0,
           0.0, 0.0, 1.0, 0.0,
           0.0, 0.0, 0.0, 1.0]

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [-0.0064662, -0.99994994, -0.00763565,
           0.99997909, -0.00646566, -0.00009558, 
           0.0000462, -0.00763611, 0.99997084]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [0.00533646,-0.04302922, 0.02303124]

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 20                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 5   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.04          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.004         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.0004         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 0.00002      # gyroscope bias random work noise standard deviation.     #4.0e-5

#imu parameters       The more accurate parameters you provide, the better performance
#acc_n: 7.6509e-02           # accelerometer measurement noise standard deviation. #0.599298904976
#gyr_n: 9.0086e-03          # gyroscope measurement noise standard deviation.     #0.198614898699
#acc_w: 5.3271e-02        # accelerometer bias random work noise standard deviation.  #0.02
#gyr_w: 5.5379e-05        # gyroscope bias random work noise standard deviation.     #4.0e-5

g_norm: 9.81007     # gravity magnitude

#loop closure parameters
loop_closure: 1                    # start loop closure
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 0             # useful in real-time and large project
pose_graph_save_path: "/home/zhangs/mynt_vins/config/mynteye/pose_graph/" # save and load path

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ

voc_path: "/catkin_ws/src/libcppt/config/voc/brief_k10L6.bin"
brief_pattern_path: "/catkin_ws/src/libcppt/config/brief/brief_pattern.yml"
